{"version":3,"sources":["components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","App.jsx","index.js"],"names":["module","exports","ContactForm","state","name","number","formSubmit","e","preventDefault","props","onSubmit","handleInputChange","target","value","setState","this","onChange","type","pattern","title","required","Component","Filter","inputChange","filter","ContactList","contactsData","onRemoveContact","map","item","className","s","listItem","onClick","id","App","contacts","addContact","contact","uuidv4","checkedName","find","toLowerCase","alert","prevState","removeContact","filterContact","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.39f9d9a9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"ContactList_listItem__1rAm8\"};","import { Component } from 'react';\r\n\r\n\r\nclass ContactForm extends Component {\r\n    state = {\r\n        name: '',\r\n        number: '',\r\n    };\r\n\r\n    formSubmit = (e) => {\r\n        e.preventDefault()\r\n        this.props.onSubmit(this.state)\r\n    }\r\n\r\n\r\n\r\n    handleInputChange = ({ target }) => {\r\n        const { name, value } = target;\r\n        this.setState({ [name]: value });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.formSubmit}>\r\n                <label> Name\r\n                    <input\r\n                        value={this.state.name}\r\n                        onChange={this.handleInputChange}\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                        required\r\n                    />\r\n                </label>\r\n                <label> Phone\r\n                    <input\r\n                        value={this.state.number}\r\n                        onChange={this.handleInputChange}\r\n                        type=\"tel\"\r\n                        name=\"number\"\r\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                        required\r\n                    />\r\n                </label>\r\n                <button type=\"submit\">Add contact</button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ContactForm;","\r\nconst Filter = ({ inputChange, filter }) => {\r\n    return (<label>Find contacts by name\r\n        <input\r\n            value={filter}\r\n            onChange={inputChange}\r\n            type=\"text\"\r\n            name=\"filter\"\r\n        />\r\n    </label>)\r\n}\r\n\r\nexport default Filter","import s from './ContactList.module.css'\r\n\r\nconst ContactList = ({ contactsData, onRemoveContact }) => {\r\n    return (<ul>\r\n        {contactsData.map(item => {\r\n            return (<li key={item.id} className={s.listItem}>\r\n                <p>{item.name} :</p>\r\n                <p>{item.number}</p>\r\n                <button type=\"button\" onClick={() => onRemoveContact(item.id)}>Delete</button>\r\n            </li>)\r\n        })}\r\n    </ul>)\r\n}\r\n\r\nexport default ContactList","import { Component } from 'react';\nimport './App.css';\nimport { v4 as uuidv4 } from 'uuid';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter'\nimport ContactList from './components/ContactList'\n\n\nclass App extends Component {\n  state = {\n    contacts: [{ id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n    { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n    { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n    { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },],\n    filter: '',\n  };\n\n  handleInputChange = ({ target }) => {\n    const { name, value } = target;\n    this.setState({ [name]: value });\n  };\n\n  addContact = ({ name, number }) => {\n    // console.log({ name, number })\n    const contact = {\n      id: uuidv4(),\n      name,\n      number,\n    }\n    const checkedName = this.state.contacts.find(contact => name.toLowerCase() === contact.name.toLowerCase());\n    checkedName ? alert(`${name} is already in contacts!`) : this.setState(prevState => ({ contacts: [...prevState.contacts, contact] }))\n  };\n\n  removeContact = (id) => {\n    this.setState(prevState => {\n      return {\n        contacts: [...prevState.contacts].filter(item => item.id !== id)\n      }\n    })\n  }\n\n  filterContact = () => {\n    const { contacts, filter } = this.state;\n    return contacts.filter(item => item.name.toLowerCase().includes(filter.toLowerCase()))\n  }\n\n  render() {\n    const { filter } = this.state;\n    return (\n      <>\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.addContact} />\n        <h2>Contacts</h2>\n        <Filter inputChange={this.handleInputChange} filter={filter} />\n        <ContactList contactsData={this.filterContact()} onRemoveContact={this.removeContact} />\n      </>\n    )\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}